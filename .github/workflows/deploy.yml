name: Deploy Localpay API Prod

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI (for master only)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Clear AWS CLI cache (if any)
        run: |
            rm -rf ~/.aws/cli/cache
      
      - name: Verify AWS identity
        run: aws sts get-caller-identity
        

      
      - name: Get EC2 Public IP by Tag 
        run: |
            IP_LIST=$(aws ec2 describe-instances \
              --region us-east-1 \
              --filters "Name=tag:Name,Values=localpay-production-zz" "Name=instance-state-name,Values=running" \
              --output json | jq -r '.Reservations[].Instances[].PublicIpAddress')
            set -e
            IP_CSV=$(echo "$IP_LIST" | paste -sd "," -)
  
            echo "Resolved EC2 IPs: $IP_CSV"
            echo "EC2_PUBLIC_IP=$IP_CSV" >> $GITHUB_ENV

      - name: Run composer and build on build server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.BUILD_SERVER_IP }} <<'EOF'
           set -e
           # installing nginx+php
           if ! command -v  nginx > /dev/null >2&1; then
             echo "installing  Nginx and Apache 8.2 on Build Server"
             sudo apt update
             sudo apt install -y software-properties-common
             sudo add-apt-repository -y ppa:ondrej/php
             sudo apt update
             sudo apt install -y nginx \
                php8.2 php8.2-{cli,fpm,mbstring,pgsql,curl,xml,zip,bcmath,intl} \
                unzip curl composer git
             sudo systemctl enable nginx php8.2-fpm
            fi 
             
            # 2)  Ensure Build workspace exists
            sudo mkdir -p /var/www/html/localpay-api
            sudo chown -R ubuntu:ubuntu /var/www/html/localpay-api
            cd /var/www/html/localpay-api

            #3) copy fresh .env and run composer

            echo "${{ secrets.PRODUCTION_BACKEND_ENV }}" > .env  
            composer install --no-dev --optimize-autoloader

            php artisan config:cache route:cache view:cache

            mkdir -p ~/builds
            tar --exclude='.git' -czf ~/builds/localpay-api.tar.gz .
          EOF

      - name: Download artifact from build server to runner 
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.BUILD_SERVER_IP }}:~/builds/localpay-api.tar.gz .



          - name: Deploy to Production EC2s
          env:
            EC2_PUBLIC_IP: ${{ env.EC2_PUBLIC_IP }}
          run: |
            IFS=',' read -ra IP_ARRAY <<< "$EC2_PUBLIC_IP"
            for ip in "${IP_ARRAY[@]}"; do
              echo "ðŸ“¦  Uploading to $ip"
              scp -C -o StrictHostKeyChecking=no -i $HOME/.ssh/id_rsa \
                  localpay-api.tar.gz ubuntu@$ip:/tmp/
        
              echo "ðŸš€  Deploying & installing baseline stack on $ip"
              ssh -o StrictHostKeyChecking=no -i $HOME/.ssh/id_rsa ubuntu@$ip <<'SSH'
                set -e
        
                # â”€â”€ 1.  Install Nginx + PHPâ€‘FPM 8.2 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
                if ! command -v nginx >/dev/null 2>&1; then
                  echo "Installing NginxÂ 1.24 & PHPÂ 8.2..."
                  sudo apt-get update
                  sudo apt-get install -y software-properties-common
                  sudo add-apt-repository -y ppa:ondrej/php
                  sudo apt-get update
                  sudo apt-get install -y nginx \
                      php8.2 php8.2-fpm php8.2-cli \
                      php8.2-{mbstring,curl,pgsql,xml,zip,bcmath,intl} \
                      unzip curl
                  sudo systemctl enable nginx php8.2-fpm
                fi
        
                # â”€â”€ 2.  Ensure web root exists â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
                sudo mkdir -p /var/www/html
                sudo chown -R ubuntu:ubuntu /var/www/html
        
                # â”€â”€ 3.  Deploy application â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
                sudo mkdir -p /var/www/html/localpay-api
                sudo tar -xzf /tmp/localpay-api.tar.gz \
                     -C /var/www/html/localpay-api --strip-components=1
        
                sudo chown -R www-data:www-data /var/www/html/localpay-api
                sudo chmod -R 755 /var/www/html/localpay-api
        
                # â”€â”€ 4.  Configure Nginx site â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
                sudo cp /var/www/html/localpay-api/deploy/nginx.conf \
                        /etc/nginx/sites-available/localpay-api
        
                # Force correct PHPâ€‘FPM socket path inside nginx.conf
                sudo sed -i 's#fastcgi_pass .*;#fastcgi_pass unix:/run/php/php8.2-fpm.sock;#' \
                        /etc/nginx/sites-available/localpay-api
        
                sudo ln -sf /etc/nginx/sites-available/localpay-api \
                             /etc/nginx/sites-enabled/localpay-api
                sudo rm -f /etc/nginx/sites-enabled/default || true
        
                # â”€â”€ 5.  Run database migrations & cache â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
                cd /var/www/html/localpay-api
                php artisan migrate --force
                php artisan config:cache
                php artisan route:cache
                php artisan view:cache
        
                # â”€â”€ 6.  Restart services â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
                sudo systemctl reload php8.2-fpm
                sudo systemctl restart nginx
        
            done
        

      # - name: Deploy to Production EC2s
      #   run: |
      #     IFS=',' read -ra IP_ARRAY <<< "$EC2_PUBLIC_IP"


      #     for ip in "${IP_ARRAY[@]}"; do
      #       echo "ðŸ“¦ Uploading to $ip"
      #       scp -C -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no localpay-api.tar.gz ubuntu@$ip:/tmp/

      #       echo "ðŸš€ Deploying to $ip"
      #       ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@$ip <<'EOF'
      #         set -e
      #       #   sudo apt update
      #       #   sudo apt install -y php php-cli php-mbstring unzip curl php-pgsql nginx php-fpm

      #         mkdir -p /var/www/html/localpay-api
      #         tar -xzf /tmp/localpay-api.tar.gz -C /var/www/html/localpay-api --strip-components=1

      #       #   sudo chown -R www-data:www-data /var/www/html/localpay-api
      #       #   sudo chmod -R 755 /var/www/html/localpay-api

      #       #   sudo cp /var/www/html/localpay-api/deploy/nginx.conf /etc/nginx/sites-available/localpay-api
      #       #   sudo ln -sf /etc/nginx/sites-available/localpay-api /etc/nginx/sites-enabled/localpay-api
      #       #   sudo rm -f /etc/nginx/sites-enabled/default

      #         cd /var/www/html/localpay-api
      #       #   php artisan migrate

      #       #   sudo systemctl reload php8.2-fpm
      #       #   sudo systemctl restart nginx
      #       EOF
      #     done
